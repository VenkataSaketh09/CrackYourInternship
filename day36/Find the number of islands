import sys
from collections import deque
sys.setrecursionlimit(10**8)
class Solution:
    def numIslands(self,grid):
        #code here
        def bfs(i,j):
            directions = [(-1, 0), (1, 0), (0, -1), (0, 1), (-1, -1), (-1, 1), (1, -1), (1, 1)]
            que=deque([(i,j)])
            visited[i][j]=True
            while que:
                x,y=que.popleft()
                for dir_x,dir_y in directions:
                    new_x,new_y=x+dir_x,y+dir_y
                    if 0<=new_x<rows and 0<=new_y<cols and not visited[new_x][new_y] and grid[new_x][new_y]==1:
                        visited[new_x][new_y]=True
                        que.append((new_x,new_y))
                
        rows=len(grid)
        cols=len(grid[0])
        count=0
        visited=[[False for _ in range(cols)] for _ in range(rows)]
        for i in range(rows):
            for j in range(cols):
                if not visited[i][j] and grid[i][j]==1:
                    bfs(i,j)
                    count+=1
        return count
